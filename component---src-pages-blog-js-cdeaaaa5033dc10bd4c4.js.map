{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","Blog","_ref","data","a","createElement","title","allMarkdownRemark","edges","map","post","key","node","id","frontmatter","author","date","to","path","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Nav","backgroundColor","paddingTop","listStyle","display","justifyContent","Layout","children","query","render","Fragment","header","nav","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-blog-js-cdeaaaa5033dc10bd4c4.js","sourcesContent":["/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst Blog = ({ data }) => (\n  <Layout>\n    <SEO title=\"Blog\" />\n    <h1>Latest Posts</h1>\n    {data.allMarkdownRemark.edges.map(post => (\n      <div key={post.node.id}>\n        <h3>{post.node.frontmatter.title}</h3>\n        <small>\n          Posted by {post.node.frontmatter.author} on{' '}\n          {post.node.frontmatter.date}\n        </small>\n        <br />\n        <br />\n        <Link to={post.node.frontmatter.path}>Read More</Link>\n        <br />\n        <br />\n        <hr />\n      </div>\n    ))}\n  </Layout>\n);\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery {\n    allMarkdownRemark {\n      edges {\n        node {\n          id\n          frontmatter {\n            path\n            title\n            date\n            author\n          }\n        }\n      }\n    }\n  }\n`;\nexport default Blog;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: '#FFD166',\n      marginBottom: '0',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { Link } from 'gatsby';\n\nconst Nav = () => (\n  <nav\n    style={{\n      backgroundColor: '#ef476f',\n      paddingTop: '10px',\n    }}\n  >\n    <ul\n      style={{\n        listStyle: 'none',\n        padding: '0',\n        display: 'flex',\n        justifyContent: 'space-evenly',\n      }}\n    >\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/about/\">About</Link>\n      </li>\n      <li>\n        <Link to=\"/services/\">Services</Link>\n      </li>\n      <li>\n        <Link to=\"/blog/\">Blog</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Nav;\n","/* eslint-disable react/jsx-filename-extension */\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport Nav from './nav';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Nav />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            © \n{' '}\n{new Date().getFullYear()}\n, Built with\n{\" \"}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","About","a","createElement","title","to","SEO","_ref","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Nav","backgroundColor","paddingTop","listStyle","display","justifyContent","Layout","children","query","render","Fragment","header","nav","Date","getFullYear","href","_755544856","node"],"mappings":"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","file":"component---src-pages-about-js-045d1217916df6fa2d2f.js","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst About = () => (\n  <Layout>\n    <SEO title=\"About\" />\n    <h1>About us</h1>\n    <p>\n      Quia repellat aut ea nesciunt nobis aliquid est officia praesentium.\n      Ducimus voluptatem eaque eligendi quam sed. Ex aliquam voluptas tempore.\n      Qui enim dolore rerum. Et cum commodi quia hic excepturi unde cupiditate\n      rerum rerum. Mollitia ratione repellat ipsa autem. Repellat consequatur\n      laudantium est. Dolorum ut et deserunt consequuntur voluptas dolor\n      molestias. Et magni esse omnis dignissimos sit.\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n);\n\nexport default About;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: '#FFD166',\n      marginBottom: '0',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { Link } from 'gatsby';\n\nconst Nav = () => (\n  <nav\n    style={{\n      backgroundColor: '#ef476f',\n      paddingTop: '10px',\n    }}\n  >\n    <ul\n      style={{\n        listStyle: 'none',\n        padding: '0',\n        display: 'flex',\n        justifyContent: 'space-evenly',\n      }}\n    >\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/about/\">About</Link>\n      </li>\n      <li>\n        <Link to=\"/services/\">Services</Link>\n      </li>\n      <li>\n        <Link to=\"/blog/\">Blog</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Nav;\n","/* eslint-disable react/jsx-filename-extension */\n/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport Nav from './nav';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Nav />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© \n{' '}\n{new Date().getFullYear()}\n, Built with\n{\" \"}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}